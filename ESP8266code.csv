#include<ESP8266WiFi.h>
#include<WiFiClient.h>
#include<ESP8266HTTPClient.h>

const char* ssid = "Ketan";
const char* password = "12345678";
const char* API_KEY = "WX52KI4LZ4HWW0A9";
const char* SERVER = "api.thingspeak.com";

void setup() {
  Serial.begin(9600);
  WiFi.begin(ssid, password);
  
  Serial.print("Connecting to ");
  Serial.println(ssid);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void loop() {
  if(Serial.available() > 0) {
    String data = Serial.readStringUntil('\n');
    Serial.println(data);
    
    int firstCommaIndex = data.indexOf(',');
    int secondCommaIndex = data.indexOf(',', firstCommaIndex + 1);
    
    if (firstCommaIndex != -1 && secondCommaIndex != -1) {
      float temperature = data.substring(0, firstCommaIndex).toFloat();
      float humidity = data.substring(firstCommaIndex + 1, secondCommaIndex).toFloat();
      float mq3Reading = data.substring(secondCommaIndex + 1).toFloat();
      
      Serial.print("Temperature: ");
      Serial.println(temperature);
      Serial.print("Humidity: ");
      Serial.println(humidity);
      Serial.print("MQ3 Reading: ");
      Serial.println(mq3Reading);
      
      sendData(temperature, humidity, mq3Reading);
    }
  }
}

void sendData(float temperature, float humidity, float mq3Reading) {
  WiFiClient client;
  HTTPClient http;
  
  String url = "http://" + String(SERVER) + "/update?api_key=" + String(API_KEY) + "&field1=" + String(temperature) + "&field2=" + String(humidity) + "&field3=" + String(mq3Reading);
  
  Serial.print("URL: ");
  Serial.println(url);
  
  if (http.begin(client, url)) {  // HTTP
    int httpCode = http.POST();
    if (httpCode > 0) {
      Serial.printf("[HTTP] POST... code: %d\n", httpCode);
      if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
        String payload = http.getString();
        Serial.println(payload);
      }
    } else {
      Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
    }
    http.end();
  } else {
    Serial.println("Unable to connect to server");
  }
}